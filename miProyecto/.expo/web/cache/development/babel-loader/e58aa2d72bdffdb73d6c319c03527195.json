{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Example, {\n            children: _jsx(CenteredText, {\n              children: \"A\"\n            })\n          }), _jsxs(Example, {\n            children: [_jsx(CenteredText, {\n              children: \"B\"\n            }), _jsx(View, {\n              style: [styles.tinyExample, {\n                position: 'absolute',\n                right: 0,\n                bottom: 0\n              }],\n              children: _jsx(CenteredText, {\n                children: \"E\"\n              })\n            })]\n          }), _jsx(Example, {\n            children: _jsx(CenteredText, {\n              children: \"C\"\n            })\n          })]\n        }), _jsx(Example, {\n          style: {\n            position: 'absolute',\n            right: 0,\n            bottom: 0\n          },\n          children: _jsx(CenteredText, {\n            children: \"D\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n\nvar Example = function Example(props) {\n  return _jsx(View, {\n    style: [styles.example, props.style],\n    children: props.children\n  });\n};\n\nvar CenteredText = function CenteredText(props) {\n  return _jsx(Text, {\n    style: [styles.centeredText, props.style],\n    children: props.children\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: 300,\n    height: 300,\n    margin: 40,\n    marginTop: 100,\n    borderWidth: 1\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  example: {\n    width: 100,\n    height: 100,\n    backgroundColor: 'grey',\n    borderWidth: 1,\n    justifyContent: 'center'\n  },\n  tinyExample: {\n    width: 30,\n    height: 30,\n    borderWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: 'lightgrey'\n  },\n  centeredText: {\n    textAlign: 'center',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/67259713/miProyecto/Listing-4.13-Positioning/App.js"],"names":["React","Component","App","styles","container","row","tinyExample","position","right","bottom","Example","props","example","style","children","CenteredText","centeredText","StyleSheet","create","width","height","margin","marginTop","borderWidth","flex","flexDirection","backgroundColor","justifyContent","textAlign"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IAGqBC,G;;;;;;;;;;;;;WACjB,kBAAS;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA,qBACI,KAAC,OAAD;AAAA,sBACI,KAAC,YAAD;AAAA;AAAA;AADJ,YADJ,EAII,MAAC,OAAD;AAAA,uBACI,KAAC,YAAD;AAAA;AAAA,cADJ,EAEI,KAAC,IAAD;AAAM,cAAA,KAAK,EAAE,CAACF,MAAM,CAACG,WAAR,EACA;AAACC,gBAAAA,QAAQ,EAAE,UAAX;AACCC,gBAAAA,KAAK,EAAE,CADR;AAECC,gBAAAA,MAAM,EAAE;AAFT,eADA,CAAb;AAAA,wBAII,KAAC,YAAD;AAAA;AAAA;AAJJ,cAFJ;AAAA,YAJJ,EAaI,KAAC,OAAD;AAAA,sBACI,KAAC,YAAD;AAAA;AAAA;AADJ,YAbJ;AAAA,UADJ,EAkBI,KAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAACF,YAAAA,QAAQ,EAAE,UAAX;AAAsBC,YAAAA,KAAK,EAAE,CAA7B;AAAgCC,YAAAA,MAAM,EAAE;AAAxC,WAAhB;AAAA,oBACI,KAAC,YAAD;AAAA;AAAA;AADJ,UAlBJ;AAAA,QADJ;AAwBH;;;;EA1B4BR,S;;SAAZC,G;;AA6BrB,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD;AAAA,SACZ,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACR,MAAM,CAACS,OAAR,EAAgBD,KAAK,CAACE,KAAtB,CAAb;AAAA,cACKF,KAAK,CAACG;AADX,IADY;AAAA,CAAhB;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD;AAAA,SACjB,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACR,MAAM,CAACa,YAAR,EAAsBL,KAAK,CAACE,KAA5B,CAAb;AAAA,cACKF,KAAK,CAACG;AADX,IADiB;AAAA,CAArB;;AAMA,IAAMX,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,GAFD;AAGPC,IAAAA,MAAM,EAAE,EAHD;AAIPC,IAAAA,SAAS,EAAE,GAJJ;AAKPC,IAAAA,WAAW,EAAE;AALN,GADkB;AAQ7BlB,EAAAA,GAAG,EAAE;AACDmB,IAAAA,IAAI,EAAE,CADL;AAEDC,IAAAA,aAAa,EAAE;AAFd,GARwB;AAY7Bb,EAAAA,OAAO,EAAE;AACLO,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,GAFH;AAGLM,IAAAA,eAAe,EAAE,MAHZ;AAILH,IAAAA,WAAW,EAAE,CAJR;AAKLI,IAAAA,cAAc,EAAE;AALX,GAZoB;AAmB7BrB,EAAAA,WAAW,EAAE;AACTa,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTG,IAAAA,WAAW,EAAE,CAHJ;AAITI,IAAAA,cAAc,EAAE,QAJP;AAKTD,IAAAA,eAAe,EAAE;AALR,GAnBgB;AA0B7BV,EAAAA,YAAY,EAAE;AACVY,IAAAA,SAAS,EAAE,QADD;AAEVP,IAAAA,MAAM,EAAE;AAFE;AA1Be,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View} from 'react-native';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.row}>\r\n                    <Example>\r\n                        <CenteredText>A</CenteredText>\r\n                    </Example>\r\n                    <Example>\r\n                        <CenteredText>B</CenteredText>\r\n                        <View style={[styles.tinyExample,\r\n                                     {position: 'absolute',\r\n                                      right: 0,\r\n                                      bottom: 0}]}>\r\n                            <CenteredText>E</CenteredText>\r\n                        </View>\r\n                    </Example>\r\n                    <Example>\r\n                        <CenteredText>C</CenteredText>\r\n                    </Example>\r\n                </View>\r\n                <Example style={{position: 'absolute',right: 0, bottom: 0}}>\r\n                    <CenteredText>D</CenteredText>\r\n                </Example>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst Example = (props) => (\r\n    <View style={[styles.example,props.style]}>\r\n        {props.children}\r\n    </View>\r\n);\r\n\r\nconst CenteredText = (props) => (\r\n    <Text style={[styles.centeredText, props.style]}>\r\n        {props.children}\r\n    </Text>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: 300,\r\n        height: 300,\r\n        margin: 40,\r\n        marginTop: 100,\r\n        borderWidth: 1\r\n    },\r\n    row: {\r\n        flex: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    example: {\r\n        width: 100,\r\n        height: 100,\r\n        backgroundColor: 'grey',\r\n        borderWidth: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    tinyExample: {\r\n        width: 30,\r\n        height: 30,\r\n        borderWidth: 1,\r\n        justifyContent: 'center',\r\n        backgroundColor: 'lightgrey'\r\n    },\r\n    centeredText: {\r\n        textAlign: 'center',\r\n        margin: 10\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}