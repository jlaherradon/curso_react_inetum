{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RNAnimations = function (_Component) {\n  _inherits(RNAnimations, _Component);\n\n  var _super = _createSuper(RNAnimations);\n\n  function RNAnimations() {\n    var _this;\n\n    _classCallCheck(this, RNAnimations);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loading: true\n    };\n    _this.animatedRotation = new Animated.Value(0);\n\n    _this.animate = function () {\n      Animated.loop(Animated.timing(_this.animatedRotation, {\n        toValue: 1,\n        duration: 1800,\n        easing: Easing.linear\n      })).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(RNAnimations, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.animate();\n      setTimeout(function () {\n        return _this2.setState({\n          loading: false\n        });\n      }, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rotation = this.animatedRotation.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '360deg']\n      });\n      var loading = this.state.loading;\n      return _jsx(View, {\n        style: styles.container,\n        children: loading ? _jsx(Animated.Image, {\n          source: require(\"./spinner.png\"),\n          style: {\n            width: 40,\n            height: 40,\n            transform: [{\n              rotate: rotation\n            }]\n          }\n        }) : _jsx(Text, {\n          children: \"Welcome\"\n        })\n      });\n    }\n  }]);\n\n  return RNAnimations;\n}(Component);\n\nexport { RNAnimations as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    paddingTop: 50\n  },\n  input: {\n    height: 50,\n    marginHorizontal: 15,\n    backgroundColor: '#ededed',\n    marginTop: 10,\n    paddingHorizontal: 9\n  }\n});","map":{"version":3,"sources":["C:/Users/67259713/miProyecto/Animations/AnimatedLoop.js"],"names":["React","Component","RNAnimations","state","loading","animatedRotation","Animated","Value","animate","loop","timing","toValue","duration","easing","Easing","linear","start","setTimeout","setState","rotation","interpolate","inputRange","outputRange","styles","container","require","width","height","transform","rotate","StyleSheet","create","flex","justifyContent","alignItems","padding","paddingTop","input","marginHorizontal","backgroundColor","marginTop","paddingHorizontal"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;IAUqBC,Y;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;UAORC,gB,GAAmB,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,C;;UACnBC,O,GAAU,YAAM;AACdF,MAAAA,QAAQ,CAACG,IAAT,CACEH,QAAQ,CAACI,MAAT,CACE,MAAKL,gBADP,EAEE;AACEM,QAAAA,OAAO,EAAE,CADX;AAEEC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,MAAM,EAAEC,MAAM,CAACC;AAHjB,OAFF,CADF,EASEC,KATF;AAUD,K;;;;;;;WAhBD,6BAAoB;AAAA;;AAClB,WAAKR,OAAL;AACAS,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAI,CAACC,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAN;AAAA,OAAD,EAA0C,IAA1C,CAAV;AACD;;;WAcD,kBAAS;AACP,UAAMe,QAAQ,GAAG,KAAKd,gBAAL,CAAsBe,WAAtB,CAAkC;AACjDC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADqC;AAEjDC,QAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,QAAT;AAFoC,OAAlC,CAAjB;AAIA,UAAQlB,OAAR,GAAoB,KAAKD,KAAzB,CAAQC,OAAR;AACA,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA,kBAEIpB,OAAO,GACL,KAAC,QAAD,CAAU,KAAV;AACE,UAAA,MAAM,EAAEqB,OAAO,iBADjB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,EAAT;AAAaC,YAAAA,MAAM,EAAE,EAArB;AAAyBC,YAAAA,SAAS,EAAE,CAAC;AAAEC,cAAAA,MAAM,EAAEV;AAAV,aAAD;AAApC;AAFT,UADK,GAML,KAAC,IAAD;AAAA;AAAA;AARN,QADF;AAcD;;;;EAzCuClB,S;;SAArBC,Y;AA4CrB,IAAMqB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,UAAU,EAAE;AALH,GADoB;AAQ/BC,EAAAA,KAAK,EAAE;AACLV,IAAAA,MAAM,EAAE,EADH;AAELW,IAAAA,gBAAgB,EAAE,EAFb;AAGLC,IAAAA,eAAe,EAAE,SAHZ;AAILC,IAAAA,SAAS,EAAE,EAJN;AAKLC,IAAAA,iBAAiB,EAAE;AALd;AARwB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Easing,\n  StyleSheet,\n  View,\n  Animated,\n  Button,\n  Text,\n} from 'react-native';\n\nexport default class RNAnimations extends Component {\n  state = {\n    loading: true,\n  }\n  componentDidMount() {\n    this.animate();\n    setTimeout(() => this.setState({ loading: false }), 2000)\n  }\n  animatedRotation = new Animated.Value(0);\n  animate = () => {\n    Animated.loop(\n      Animated.timing(\n        this.animatedRotation,\n        {\n          toValue: 1,\n          duration: 1800,\n          easing: Easing.linear,\n        }\n      )\n    ).start()\n  }\n  render() {\n    const rotation = this.animatedRotation.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg'],\n    });\n    const { loading } = this.state;\n    return (\n      <View style={styles.container}>\n        {\n          loading ? (\n            <Animated.Image\n              source={require('./spinner.png')}\n              style={{ width: 40, height: 40, transform: [{ rotate: rotation }] }}\n            />\n          ) : (\n            <Text>Welcome</Text>\n          )\n        }\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n    paddingTop: 50,\n  },\n  input: {\n    height: 50,\n    marginHorizontal: 15,\n    backgroundColor: '#ededed',\n    marginTop: 10,\n    paddingHorizontal: 9,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}