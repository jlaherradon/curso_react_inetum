{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar userImage = require(\"./user.png\");\n\nvar data = [{\n  image: userImage,\n  name: 'John Doe',\n  occupation: 'React Native Developer',\n  description: 'John is a really great Javascript developer. He loves using JS to build React Native applications for iOS and Android',\n  showThumbnail: true\n}];\n\nvar ProfileCard = function ProfileCard(props) {\n  var image = props.image,\n      name = props.name,\n      occupation = props.occupation,\n      description = props.description,\n      onPress = props.onPress,\n      showThumbnail = props.showThumbnail;\n  var containerStyles = [styles.cardContainer];\n\n  if (showThumbnail) {\n    containerStyles.push(styles.cardThumbnail);\n  }\n\n  return _jsx(TouchableHighlight, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: [containerStyles],\n      children: [_jsx(View, {\n        style: styles.cardImageContainer,\n        children: _jsx(Image, {\n          style: styles.cardImage,\n          source: image\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.cardName,\n          children: name\n        })\n      }), _jsx(View, {\n        style: styles.cardOccupationContainer,\n        children: _jsx(Text, {\n          style: styles.cardOccupation,\n          children: occupation\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.cardDescription,\n          children: description\n        })\n      })]\n    })\n  });\n};\n\nProfileCard.propTypes = {\n  image: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  occupation: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  showThumbnail: PropTypes.bool.isRequired,\n  onPress: PropTypes.func.isRequired\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props, context) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props, context);\n\n    _this.handleProfileCardPress = function (index) {\n      var showThumbnail = !_this.state.data[index].showThumbnail;\n\n      _this.setState({\n        data: update(_this.state.data, _defineProperty({}, index, {\n          showThumbnail: {\n            $set: showThumbnail\n          }\n        }))\n      });\n    };\n\n    _this.state = {\n      data: data\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var list = this.state.data.map(function (item, index) {\n        var image = item.image,\n            name = item.name,\n            occupation = item.occupation,\n            description = item.description,\n            showThumbnail = item.showThumbnail;\n        return _jsx(ProfileCard, {\n          image: image,\n          name: name,\n          occupation: occupation,\n          description: description,\n          onPress: this.handleProfileCardPress.bind(this, index),\n          showThumbnail: showThumbnail\n        }, 'card-' + index);\n      }, this);\n      return _jsx(View, {\n        style: styles.container,\n        children: list\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar profileCardColor = 'dodgerblue';\nvar styles = StyleSheet.create({\n  cardThumbnail: {\n    transform: [{\n      scale: 0.2\n    }]\n  },\n  container: {\n    backgroundColor: 'white',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  cardContainer: _objectSpread({\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 3,\n    borderStyle: 'solid',\n    borderRadius: 20,\n    backgroundColor: profileCardColor,\n    width: 300,\n    height: 400\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        height: 10\n      },\n      shadowOpacity: 1\n    },\n    android: {\n      elevation: 15\n    }\n  })),\n  cardImageContainer: _objectSpread({\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderWidth: 3,\n    borderColor: 'black',\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginTop: 30,\n    paddingTop: 15\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        height: 10\n      },\n      shadowOpacity: 1\n    },\n    android: {\n      borderWidth: 3,\n      borderColor: 'black',\n      elevation: 15\n    }\n  })),\n  cardImage: {\n    width: 80,\n    height: 80\n  },\n  cardName: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 24,\n    marginTop: 30,\n    textShadowColor: 'black',\n    textShadowOffset: {\n      height: 2,\n      width: 2\n    },\n    textShadowRadius: 3\n  },\n  cardOccupationContainer: {\n    borderColor: 'black',\n    borderBottomWidth: 3\n  },\n  cardOccupation: {\n    fontWeight: 'bold',\n    marginTop: 10,\n    marginBottom: 10\n  },\n  cardDescription: {\n    fontStyle: 'italic',\n    marginTop: 10,\n    marginRight: 40,\n    marginLeft: 40,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/67259713/miProyecto/Listing-5.3-ProfileCard-Step8-Thumbnail/App.js"],"names":["React","Component","PropTypes","update","userImage","require","data","image","name","occupation","description","showThumbnail","ProfileCard","props","onPress","containerStyles","styles","cardContainer","push","cardThumbnail","cardImageContainer","cardImage","cardName","cardOccupationContainer","cardOccupation","cardDescription","propTypes","number","isRequired","string","bool","func","App","context","handleProfileCardPress","index","state","setState","$set","list","map","item","bind","container","profileCardColor","StyleSheet","create","transform","scale","backgroundColor","flex","justifyContent","alignItems","borderColor","borderWidth","borderStyle","borderRadius","width","height","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","android","elevation","marginTop","paddingTop","color","fontWeight","fontSize","textShadowColor","textShadowOffset","textShadowRadius","borderBottomWidth","marginBottom","fontStyle","marginRight","marginLeft"],"mappings":"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","sourcesContent":["// -------------------------------------------\r\n// STEP 8 ProfileCard Thumbnail\r\n// -------------------------------------------\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport update from 'immutability-helper';\r\nimport { Image, Platform, StyleSheet, Text, TouchableHighlight, View} from 'react-native';\r\n\r\nconst userImage = require('./user.png');\r\n\r\nconst data = [{\r\n    image: userImage,\r\n    name: 'John Doe',\r\n    occupation: 'React Native Developer',\r\n    description: 'John is a really great Javascript developer. He loves using JS to build React Native applications for iOS and Android',\r\n    showThumbnail: true\r\n  }\r\n];\r\n\r\nconst ProfileCard = (props) => {\r\n\r\n  const { image, name, occupation, description, onPress, showThumbnail } = props;\r\n  let containerStyles = [styles.cardContainer];\r\n\r\n  if (showThumbnail) {\r\n    containerStyles.push(styles.cardThumbnail);\r\n  }\r\n\r\n  return (\r\n    <TouchableHighlight onPress={onPress}>\r\n      <View style={[containerStyles]}>\r\n        <View style={styles.cardImageContainer}>\r\n          <Image style={styles.cardImage} source={image}/>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.cardName}>\r\n            {name}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.cardOccupationContainer}>\r\n          <Text style={styles.cardOccupation}>\r\n            {occupation}\r\n          </Text>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.cardDescription}>\r\n            {description}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </TouchableHighlight>\r\n  )\r\n};\r\n\r\nProfileCard.propTypes = {\r\n  image: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  occupation: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  showThumbnail: PropTypes.bool.isRequired,\r\n  onPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      data: data\r\n    }\r\n  }\r\n\r\n  handleProfileCardPress = (index) => {\r\n\r\n    const showThumbnail = !this.state.data[index].showThumbnail;\r\n\r\n    this.setState({\r\n      data: update(this.state.data, {[index]: {showThumbnail: {$set: showThumbnail}}})\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const list = this.state.data.map(function(item, index) {\r\n      const { image, name, occupation, description, showThumbnail } = item;\r\n      return <ProfileCard key={'card-' + index}\r\n                          image={image}\r\n                          name={name}\r\n                          occupation={occupation}\r\n                          description={description}\r\n                          onPress={this.handleProfileCardPress.bind(this, index)}\r\n                          showThumbnail={showThumbnail}/>\r\n    }, this);\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {list}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst profileCardColor = 'dodgerblue';\r\n\r\nconst styles = StyleSheet.create({\r\n  cardThumbnail: {\r\n    transform: [{scale: 0.2}]\r\n  },\r\n  container: {\r\n    backgroundColor: 'white',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  cardContainer: {\r\n    alignItems: 'center',\r\n    borderColor: 'black',\r\n    borderWidth: 3,\r\n    borderStyle: 'solid',\r\n    borderRadius: 20,\r\n    backgroundColor: profileCardColor,\r\n    width: 300,\r\n    height: 400,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: 'black',\r\n        shadowOffset: {\r\n            height: 10\r\n        },\r\n        shadowOpacity: 1\r\n      },\r\n      android: {\r\n        elevation: 15\r\n      }\r\n    })\r\n  },\r\n  cardImageContainer: {\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderWidth: 3,\r\n    borderColor: 'black',\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 60,\r\n    marginTop: 30,\r\n    paddingTop: 15,\r\n    ...Platform.select({\r\n      ios: {\r\n        shadowColor: 'black',\r\n        shadowOffset: {\r\n            height: 10,\r\n        },\r\n        shadowOpacity: 1\r\n      },\r\n      android: {\r\n        borderWidth: 3,\r\n        borderColor: 'black',\r\n        elevation: 15\r\n      }\r\n    })\r\n  },\r\n  cardImage: {\r\n    width: 80,\r\n    height: 80\r\n  },\r\n  cardName: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 24,\r\n    marginTop: 30,\r\n    textShadowColor: 'black',\r\n    textShadowOffset: {\r\n        height: 2,\r\n        width: 2\r\n    },\r\n    textShadowRadius: 3\r\n  },\r\n  cardOccupationContainer: {\r\n    borderColor: 'black',\r\n    borderBottomWidth: 3\r\n  },\r\n  cardOccupation: {\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  cardDescription: {\r\n    fontStyle: 'italic',\r\n    marginTop: 10,\r\n    marginRight: 40,\r\n    marginLeft: 40,\r\n    marginBottom: 10\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}